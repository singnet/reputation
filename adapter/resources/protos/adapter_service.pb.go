// Code generated by protoc-gen-go. DO NOT EDIT.
// source: adapter_service.proto

package adapater

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BlockInterval is represented as a open
// and close time as Ethereum block number
type BlockInterval struct {
	OpenTime             int64    `protobuf:"varint,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	CloseTime            int64    `protobuf:"varint,2,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInterval) Reset()         { *m = BlockInterval{} }
func (m *BlockInterval) String() string { return proto.CompactTextString(m) }
func (*BlockInterval) ProtoMessage()    {}
func (*BlockInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7b042fa3bf0203f, []int{0}
}

func (m *BlockInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInterval.Unmarshal(m, b)
}
func (m *BlockInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInterval.Marshal(b, m, deterministic)
}
func (m *BlockInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInterval.Merge(m, src)
}
func (m *BlockInterval) XXX_Size() int {
	return xxx_messageInfo_BlockInterval.Size(m)
}
func (m *BlockInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInterval.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInterval proto.InternalMessageInfo

func (m *BlockInterval) GetOpenTime() int64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *BlockInterval) GetCloseTime() int64 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

// UnixInterval is represented as a open
// and close time as Unix timestamp
type UnixInterval struct {
	OpenTime             int64    `protobuf:"varint,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	CloseTime            int64    `protobuf:"varint,2,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnixInterval) Reset()         { *m = UnixInterval{} }
func (m *UnixInterval) String() string { return proto.CompactTextString(m) }
func (*UnixInterval) ProtoMessage()    {}
func (*UnixInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7b042fa3bf0203f, []int{1}
}

func (m *UnixInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnixInterval.Unmarshal(m, b)
}
func (m *UnixInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnixInterval.Marshal(b, m, deterministic)
}
func (m *UnixInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnixInterval.Merge(m, src)
}
func (m *UnixInterval) XXX_Size() int {
	return xxx_messageInfo_UnixInterval.Size(m)
}
func (m *UnixInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_UnixInterval.DiscardUnknown(m)
}

var xxx_messageInfo_UnixInterval proto.InternalMessageInfo

func (m *UnixInterval) GetOpenTime() int64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *UnixInterval) GetCloseTime() int64 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

// A Rating is a single closed channel
//
// It logs channelId and nonce,
// Consumer/Sender
// Provider/Recipient
// open time (as block number)
// close time (as block number)
// amount spent
type Rating struct {
	ChannelId            int64          `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Nonce                int64          `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Consumer             string         `protobuf:"bytes,3,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Provider             string         `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Interval             *BlockInterval `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	Amount               int64          `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Rating) Reset()         { *m = Rating{} }
func (m *Rating) String() string { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()    {}
func (*Rating) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7b042fa3bf0203f, []int{2}
}

func (m *Rating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rating.Unmarshal(m, b)
}
func (m *Rating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rating.Marshal(b, m, deterministic)
}
func (m *Rating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rating.Merge(m, src)
}
func (m *Rating) XXX_Size() int {
	return xxx_messageInfo_Rating.Size(m)
}
func (m *Rating) XXX_DiscardUnknown() {
	xxx_messageInfo_Rating.DiscardUnknown(m)
}

var xxx_messageInfo_Rating proto.InternalMessageInfo

func (m *Rating) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *Rating) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Rating) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *Rating) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Rating) GetInterval() *BlockInterval {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *Rating) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

//RatingSummary  is received in response to a GetRatings rpc.
//
type RatingSummary struct {
	Ratings              []*Rating `protobuf:"bytes,1,rep,name=ratings,proto3" json:"ratings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RatingSummary) Reset()         { *m = RatingSummary{} }
func (m *RatingSummary) String() string { return proto.CompactTextString(m) }
func (*RatingSummary) ProtoMessage()    {}
func (*RatingSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7b042fa3bf0203f, []int{3}
}

func (m *RatingSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatingSummary.Unmarshal(m, b)
}
func (m *RatingSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatingSummary.Marshal(b, m, deterministic)
}
func (m *RatingSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatingSummary.Merge(m, src)
}
func (m *RatingSummary) XXX_Size() int {
	return xxx_messageInfo_RatingSummary.Size(m)
}
func (m *RatingSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_RatingSummary.DiscardUnknown(m)
}

var xxx_messageInfo_RatingSummary proto.InternalMessageInfo

func (m *RatingSummary) GetRatings() []*Rating {
	if m != nil {
		return m.Ratings
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockInterval)(nil), "adapater.BlockInterval")
	proto.RegisterType((*UnixInterval)(nil), "adapater.UnixInterval")
	proto.RegisterType((*Rating)(nil), "adapater.Rating")
	proto.RegisterType((*RatingSummary)(nil), "adapater.RatingSummary")
}

func init() { proto.RegisterFile("adapter_service.proto", fileDescriptor_e7b042fa3bf0203f) }

var fileDescriptor_e7b042fa3bf0203f = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x89, 0x73, 0xb5, 0x7d, 0x73, 0x20, 0x41, 0x5d, 0x98, 0x0a, 0x65, 0xa7, 0xe2, 0x61,
	0x87, 0xed, 0x28, 0x78, 0xf0, 0x22, 0xd3, 0x83, 0x50, 0xf5, 0x3c, 0x62, 0xfa, 0xd0, 0x60, 0x93,
	0x94, 0x34, 0x2d, 0xfa, 0xe7, 0xf9, 0x9f, 0x49, 0x9b, 0xb6, 0x43, 0xc1, 0x9b, 0xc7, 0xef, 0xf7,
	0xbd, 0x7e, 0xfd, 0xf2, 0x1e, 0x9c, 0xf0, 0x8c, 0x17, 0x0e, 0xed, 0xb6, 0x44, 0x5b, 0x4b, 0x81,
	0xcb, 0xc2, 0x1a, 0x67, 0x68, 0xd8, 0x60, 0xee, 0xd0, 0x2e, 0xee, 0x61, 0x7a, 0x93, 0x1b, 0xf1,
	0xbe, 0xd1, 0x0e, 0x6d, 0xcd, 0x73, 0x7a, 0x06, 0x91, 0x29, 0x50, 0x6f, 0x9d, 0x54, 0xc8, 0x48,
	0x4c, 0x92, 0x51, 0x1a, 0x36, 0xe0, 0x49, 0x2a, 0xa4, 0x17, 0x00, 0x22, 0x37, 0x25, 0x7a, 0x77,
	0xaf, 0x75, 0xa3, 0x96, 0x34, 0xf6, 0xe2, 0x0e, 0x0e, 0x9f, 0xb5, 0xfc, 0xf8, 0x97, 0xac, 0x2f,
	0x02, 0x41, 0xca, 0x9d, 0xd4, 0xaf, 0xf4, 0x1c, 0x22, 0xf1, 0xc6, 0xb5, 0xc6, 0x7c, 0x93, 0x75,
	0x31, 0x3b, 0x40, 0x8f, 0x61, 0xac, 0x8d, 0x16, 0x7d, 0x84, 0x17, 0x74, 0x0e, 0xa1, 0x30, 0xba,
	0xac, 0x14, 0x5a, 0x36, 0x8a, 0x49, 0x12, 0xa5, 0x83, 0x6e, 0xbc, 0xc2, 0x9a, 0x5a, 0x66, 0x68,
	0xd9, 0xbe, 0xf7, 0x7a, 0x4d, 0xd7, 0x10, 0xca, 0xae, 0x3e, 0x1b, 0xc7, 0x24, 0x99, 0xac, 0x66,
	0xcb, 0x7e, 0x59, 0xcb, 0x1f, 0x9b, 0x4a, 0x87, 0x41, 0x7a, 0x0a, 0x01, 0x57, 0xa6, 0xd2, 0x8e,
	0x05, 0x6d, 0x87, 0x4e, 0x2d, 0xae, 0x60, 0xea, 0x9f, 0xf0, 0x58, 0x29, 0xc5, 0xed, 0x27, 0xbd,
	0x84, 0x03, 0xdb, 0x82, 0x92, 0x91, 0x78, 0x94, 0x4c, 0x56, 0x47, 0xbb, 0x70, 0x3f, 0x99, 0xf6,
	0x03, 0xab, 0x87, 0xe1, 0x63, 0x7f, 0x3a, 0x7a, 0x0d, 0x70, 0x8b, 0xce, 0xb3, 0x92, 0xfe, 0x55,
	0x6b, 0x3e, 0xfb, 0x1d, 0xd9, 0xfd, 0xfc, 0x25, 0x68, 0x6f, 0xbf, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x17, 0x87, 0x76, 0xc1, 0x14, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RatingServiceClient is the client API for RatingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RatingServiceClient interface {
	// A simple RPC.
	GetRatings(ctx context.Context, in *BlockInterval, opts ...grpc.CallOption) (*RatingSummary, error)
}

type ratingServiceClient struct {
	cc *grpc.ClientConn
}

func NewRatingServiceClient(cc *grpc.ClientConn) RatingServiceClient {
	return &ratingServiceClient{cc}
}

func (c *ratingServiceClient) GetRatings(ctx context.Context, in *BlockInterval, opts ...grpc.CallOption) (*RatingSummary, error) {
	out := new(RatingSummary)
	err := c.cc.Invoke(ctx, "/adapater.RatingService/GetRatings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RatingServiceServer is the server API for RatingService service.
type RatingServiceServer interface {
	// A simple RPC.
	GetRatings(context.Context, *BlockInterval) (*RatingSummary, error)
}

func RegisterRatingServiceServer(s *grpc.Server, srv RatingServiceServer) {
	s.RegisterService(&_RatingService_serviceDesc, srv)
}

func _RatingService_GetRatings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockInterval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServiceServer).GetRatings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adapater.RatingService/GetRatings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServiceServer).GetRatings(ctx, req.(*BlockInterval))
	}
	return interceptor(ctx, in, info, handler)
}

var _RatingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adapater.RatingService",
	HandlerType: (*RatingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRatings",
			Handler:    _RatingService_GetRatings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adapter_service.proto",
}
